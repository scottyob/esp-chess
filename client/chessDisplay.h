#ifndef CHESS_DISPLAY
#define CHESS_DISPLAY

#include "stdint.h"
#include "qrcode.h"
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define CHESS_DISPLAY_OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels


// 'pixil-frame-0', 64x64px
const unsigned char LOGO [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc9, 0x85, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0xe0, 0x08, 0x06, 0x04, 0x00, 0x3e, 0x00, 0x00, 0x80, 0x08, 0x06, 0x04, 0x00, 0x62, 0x00, 
  0x00, 0x80, 0x04, 0x06, 0x0c, 0x00, 0x41, 0x00, 0x00, 0x80, 0x02, 0x06, 0x18, 0x00, 0x41, 0x80, 
  0x00, 0x40, 0x01, 0x02, 0x70, 0x00, 0x40, 0x80, 0x00, 0x40, 0x00, 0xc2, 0x00, 0x00, 0x40, 0x80, 
  0x00, 0x40, 0x00, 0x22, 0x00, 0x00, 0x40, 0x80, 0x00, 0x40, 0x00, 0x22, 0x00, 0x00, 0x40, 0x80, 
  0x00, 0x7f, 0x80, 0x22, 0x00, 0x00, 0x61, 0x80, 0x00, 0x40, 0x00, 0x22, 0x00, 0x00, 0x23, 0x00, 
  0x00, 0x40, 0x00, 0x42, 0x00, 0x00, 0x22, 0x00, 0x00, 0x40, 0x00, 0x82, 0x00, 0x00, 0x22, 0x00, 
  0x00, 0x80, 0x01, 0x02, 0x00, 0x00, 0x24, 0x00, 0x00, 0x80, 0x06, 0x02, 0x00, 0x00, 0x24, 0x00, 
  0x00, 0x80, 0x00, 0x02, 0x00, 0x00, 0x24, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 
  0x00, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 
  0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x41, 0x00, 0x01, 0xe0, 0x80, 0x00, 0x00, 0x00, 0x41, 0x80, 
  0x02, 0x00, 0x80, 0x00, 0x00, 0x00, 0x40, 0x80, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x40, 
  0x04, 0x00, 0x80, 0x03, 0x00, 0x01, 0x81, 0xf0, 0x04, 0x00, 0x80, 0x0c, 0x80, 0x3f, 0x00, 0x2c, 
  0x04, 0x00, 0x80, 0x08, 0x40, 0x18, 0x00, 0x24, 0x02, 0x00, 0xf8, 0x10, 0x40, 0x0e, 0x00, 0x0c, 
  0x01, 0x00, 0xc8, 0x10, 0x40, 0x01, 0xff, 0xf8, 0x01, 0x00, 0xc4, 0x20, 0x40, 0x00, 0x00, 0x00, 
  0x00, 0xe0, 0x84, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x82, 0x38, 0x87, 0xcf, 0x80, 0x00, 
  0x00, 0x05, 0x02, 0x27, 0x08, 0x10, 0x00, 0x00, 0x0e, 0x01, 0x02, 0x10, 0x08, 0x10, 0x00, 0x00, 
  0x19, 0x80, 0x02, 0x08, 0x08, 0x10, 0x00, 0x00, 0x10, 0xc0, 0x02, 0x04, 0x08, 0x08, 0x00, 0x00, 
  0x10, 0x40, 0x02, 0x06, 0x04, 0x04, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 
  0x12, 0x40, 0x00, 0x00, 0x01, 0x01, 0x80, 0x00, 0x13, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x40, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x10, 0x00, 
  0x18, 0x00, 0x00, 0x00, 0x01, 0x80, 0x08, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 
  0x07, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x04, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 
  0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x1f, 0xff, 0xfe, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x61, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x3e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x10, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x08, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xd8
};

/*
   Drives the chess board display.  This is based on
   the SSD1306 chip over I2C.  As there are a few
   different models of this going around, attempts to
   discover the address over I2C.
*/
class ChessDisplay {
  private:
    Adafruit_SSD1306 display;    // Main display driver
    GFXcanvas1 messageCanvas;  // Canvas just for rendering text to the right hand side
    QRCode qrcode;
  public:
    ChessDisplay() : display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, CHESS_DISPLAY_OLED_RESET), messageCanvas(64, 64) {}
    bool begin();
    void update(String url, String message);
};

#endif
